<html lang="uk">
<head>
  <meta charset="UTF-8">
  <title>–†–æ–∑–≤'—è–∑—É–≤–∞–Ω–Ω—è –≥–µ–æ–º–µ—Ç—Ä–∏—á–Ω–∏—Ö –∑–∞–¥–∞—á</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background: #f2f2f2;
      color: #333;
    }
    header {
      background: #fff;
      padding: 30px;
      text-align: center;
      border-bottom: 3px solid #4CAF50;
    }
    header h1 {
      font-size: 36px;
      font-weight: bold;
    }
    main {
      padding: 20px;
      max-width: 900px;
      margin: auto;
      background: #fff;
      border-radius: 10px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }
    h2 {
      margin-top: 40px;
      color: #2e7d32;
    }
    .image-container {
      border: 2px solid #ccc;
      border-radius: 10px;
      overflow: hidden;
      margin: 20px 0;
      text-align: center;
    }
    .image-container img {
      width: 100%;
      max-width: 600px;
      cursor: pointer;
    }
    .solution {
      white-space: pre-wrap;
      background: #eef;
      padding: 15px;
      border-radius: 10px;
      margin-top: 20px;
    }
    #fullscreenView {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.9);
      z-index: 1000;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      color: #fff;
    }
    #fullImageContainer {
      position: relative;
      max-width: 90%;
      max-height: 70vh;
      margin-bottom: 20px;
    }
    #fullImage {
      max-width: 100%;
      max-height: 70vh;
      border: 2px solid #fff;
      border-radius: 5px;
    }
    #drawCanvas {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
    }
    .full-content {
      max-width: 90%;
      max-height: 20vh;
      overflow-y: auto;
      color: #fff;
      background: #333;
      padding: 15px;
      border-radius: 5px;
      margin-bottom: 10px;
    }
    .tools {
      display: flex;
      gap: 10px;
      margin-top: 10px;
    }
    .tools button {
      padding: 8px 15px;
      font-size: 16px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      background: #4CAF50;
      color: white;
    }
    .tools button:hover {
      background: #45a049;
    }
    .close-btn {
      position: absolute;
      top: 20px;
      right: 20px;
      font-size: 24px;
      background: #f44336;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <header>
    <h1>–†–æ–∑–≤'—è–∑—É–≤–∞–Ω–Ω—è –≥–µ–æ–º–µ—Ç—Ä–∏—á–Ω–∏—Ö –∑–∞–¥–∞—á</h1>
    <p><strong>–õ—é–±—ñ–Ω –ê–Ω–¥—Ä—ñ–π</strong></p>
    <p>–ù–∞ —Ü—å–æ–º—É —Å–∞–π—Ç—ñ –±—É–¥—É—Ç—å –Ω–∞–¥–∞–Ω—ñ —Ä–æ–∑–≤'—è–∑–∫–∏ –∑–∞–¥–∞—á —Ä—ñ–∑–Ω–∏—Ö —Ä—ñ–≤–Ω—ñ–≤</p>
  </header>
  <main>
    <h2>–ó–∞–¥–∞—á–∞ 1</h2>
    <p><strong>EGMO 2025 P4</strong></p>
    <p>–ù–µ—Ö–∞–π ABC ‚Äî –≥–æ—Å—Ç—Ä–æ–∫—É—Ç–Ω–∏–π —Ç—Ä–∏–∫—É—Ç–Ω–∏–∫ –∑ —Ü–µ–Ω—Ç—Ä–æ–º –≤–ø–∏—Å–∞–Ω–æ–≥–æ –∫–æ–ª–∞ —É —Ç–æ—á—Ü—ñ I. –ù–µ—Ö–∞–π D, E, F ‚Äî —Ç–æ—á–∫–∏ –¥–æ—Ç–∏–∫—É –≤–ø–∏—Å–∞–Ω–æ–≥–æ –∫–æ–ª–∞ –¥–æ —Å—Ç–æ—Ä—ñ–Ω BC, AC, AB –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ. –ù–µ—Ö–∞–π K, L, M ‚Äî —Ç–æ—á–∫–∏ —Å–∏–º–µ—Ç—Ä–∏—á–Ω—ñ —Ç–æ—á–∫–∞–º D, E, F –≤—ñ–¥–Ω–æ—Å–Ω–æ I. –î–æ–≤–µ—Å—Ç–∏, —â–æ –ø—Ä—è–º—ñ AK, BL, CM –ø–µ—Ä–µ—Ç–∏–Ω–∞—é—Ç—å—Å—è –≤ –æ–¥–Ω—ñ–π —Ç–æ—á—Ü—ñ.</p>
    <div class="image-container">
      <img src="https://imgur.com/EOURM1X.png" alt="–ó–∞–¥–∞—á–∞ 1" onclick="openFullscreen(this)">
    </div>
    <div class="solution">
      <strong>–†–æ–∑–≤'—è–∑–æ–∫:</strong>
      –ù–µ—Ö–∞–π —Ä–∞–¥—ñ—É—Å –æ–ø–∏—Å–∞–Ω–æ–≥–æ –∫–æ–ª–∞ ABC R = 1/2, –∫—É—Ç–∏ A, B, C —Ä—ñ–≤–Ω—ñ 2a, 2b, 2c. a + b + c = 90.
AP = CP = CS = sinb
AQ = BQ = BR = sinc
BC = sin2a = 2sina*cosa
–ö—É—Ç–∏ ACT = b, ABT = c. –í—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –∫—É—Ç–∏ BCT = 2c - b, CBT = 2b - c —Ç–æ–º—É –∫—É—Ç BTC = 90 + a = BIC.
CI = BC/sin(90+a) * sinb = 2sina*sinb
BI = 2sina*sinc
–ö—É—Ç SCI = SCA + ACI = 180 - b + c.
–ö—É—Ç (—Ä–∞—Ö—É—î–º–æ –≤—ñ–¥ RB –ø—Ä–æ—Ç–∏ –≥–æ–¥–∏–Ω–Ω–∏–∫–æ–≤–æ—ó —Å—Ç—Ä—ñ–ª–∫–∏) RBI = RBA + ABI = 180 - c + b = 360 - SCI. - –∑–Ω–∞—á–∏—Ç—å —Ç—Ä–∏–∫—É—Ç–Ω–∏–∫–∏ SCI —ñ RBI –º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤–∏–π –∫—É—Ç –ø—Ä–∏ –≤–µ—Ä—à–∏–Ω–∞—Ö C —ñ B, –∞–ª–µ I –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ —Ä—ñ–∑–Ω—ñ —Å—Ç–æ—Ä–æ–Ω–∏ –ø—Ä—è–º–∏—Ö ST, RT.
sin(SIC) = SC / SI * sin(SCI) = sinb * sin(SCI) / SI
sin(BIR) = BR / RI * sin(RBI) = sinc * sin(SCI) / RI.
–©–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ —â–æ SITR –≤–ø–∏—Å–∞–Ω–∏–π –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–æ–∫–∞–∑–∞—Ç–∏ —â–æ –∫—É—Ç SIR = STR = CTB = CIB, —â–æ —Ä—ñ–≤–Ω–æ—Å–∏–ª—å–Ω–æ —Ä—ñ–≤–Ω–æ—Å—Ç—ñ –∫—É—Ç—ñ–≤ SIC = BIR –∞–±–æ SI / RI = sinb / sinc.
–ó–∞ —Ç–µ–æ—Ä–µ–º–æ—é –∫–æ—Å–∏–Ω—É—Å—ñ–≤ SI^2 = SC^2 + CI^2 - 2*SC*CI*cos(SCI) = sinb^2 + 4*sinb^2*sina^2 - 4*sinb^2*sina*cos(SCI) = (sinb/sinc)^2 * (sinc^2 + 4*sinc^2*sina^2 - 4*sinc^2*sina*cos(RBI)) = (sinb/sinc * RI)^2 –∑–≤—ñ–¥–∫–∏ –π –≤–∏–ø–ª–∏–≤–∞—î –ø–æ—Ç—Ä—ñ–±–Ω–∞ —Ä—ñ–≤–Ω—ñ—Å—Ç—å.
    </div>

    <h2>–ó–∞–¥–∞—á–∞ 2</h2>
    <p><strong>–ó–∞–¥–∞—á–∞ –ø—Ä–æ –ø–ª–æ—â—É —Ç—Ä–∏–∫—É—Ç–Ω–∏–∫–∞</strong></p>
    <p>–ß–µ—Ä–µ–∑ —Ç–æ—á–∫—É X –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ç—Ä–∏–∫—É—Ç–Ω–∏–∫–∞ ABC –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä—è–º—É, —è–∫–∞ –¥—ñ–ª–∏—Ç—å –ø–ª–æ—â—É —Ç—Ä–∏–∫—É—Ç–Ω–∏–∫–∞ –Ω–∞–≤–ø—ñ–ª.</p>
    <div class="image-container">
      <img src="https://imgur.com/jN0fOQk.png" alt="–ó–∞–¥–∞—á–∞ 2" onclick="openFullscreen(this)">
    </div>
    <div class="solution">
      <strong>–†–æ–∑–≤'—è–∑–æ–∫:</strong>
–¢–æ—á–∫–∞ –• –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ç—Ä–∏–∫—É—Ç–Ω–∏–∫–∞
   –ù–µ—Ö–∞–π UV - —à—É–∫–∞–Ω–∞ –ø—Ä—è–º–∞, —è–∫—ñ–π –Ω–∞–ª–µ–∂–∏—Ç—å —Ç–æ—á-
   –∫–∞ X,d, id2 - –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–∏, –æ–ø—É—â–µ–Ω—ñ –∑ —Ç–æ—á–∫–∏
   –• –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–∏ –ê–° i –í–°. –ù–µ—Ö–∞–π CU = x, CV = —É.
   –°–∫–ª–∞–¥–µ–º–æ –ø–µ—Ä—à–µ —Ä—ñ–≤–Ω—è–Ω–Ω—è:
   2(d_1*x+d_2*y)=a*ha.
   –°–∫–ª–∞–¥–µ–º–æ –¥—Ä—É–≥–µ —Ä—ñ–≤–Ω—è–Ω–Ω—è:
   2 xy = ab.
   —Ç–∞–∫–∏–º —á–∏–Ω–æ–º,
   2d2x^2 - aha + abd_2 
    </div>
  </main>

  <div id="fullscreenView">
    <div class="close-btn" onclick="closeFullscreen()">√ó</div>
    <div id="fullImageContainer">
      <img id="fullImage" src="" alt="Full view">
      <canvas id="drawCanvas"></canvas>
    </div>
    <div class="full-content" id="fullText"></div>
    <div class="tools">
      <button onclick="setTool('pen')">‚úèÔ∏è –û–ª—ñ–≤–µ—Ü—å</button>
      <button onclick="setTool('eraser')">üßΩ –ì—É–º–∫–∞</button>
      <button onclick="clearCanvas()">üóë –û—á–∏—Å—Ç–∏—Ç–∏</button>
    </div>
  </div>

  <script>
    let currentTool = 'pen';
    const canvas = document.getElementById('drawCanvas');
    const ctx = canvas.getContext('2d');
    let drawing = false;
    let lastX = 0;
    let lastY = 0;

    function resizeCanvas() {
      const img = document.getElementById('fullImage');
      canvas.width = img.offsetWidth;
      canvas.height = img.offsetHeight;
      canvas.style.width = img.offsetWidth + 'px';
      canvas.style.height = img.offsetHeight + 'px';
    }

    function openFullscreen(img) {
      document.getElementById('fullscreenView').style.display = 'flex';
      document.getElementById('fullImage').src = img.src;
      
      const taskContainer = img.closest('.image-container').nextElementSibling;
      document.getElementById('fullText').textContent = taskContainer.textContent;

      setTimeout(() => {
        resizeCanvas();
      }, 50);
    }

    function closeFullscreen() {
      document.getElementById('fullscreenView').style.display = 'none';
      clearCanvas();
    }

    function setTool(tool) {
      currentTool = tool;
      canvas.style.pointerEvents = tool === 'eraser' ? 'auto' : 'auto';
    }

    function clearCanvas() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    }

    canvas.addEventListener('mousedown', (e) => {
      drawing = true;
      lastX = e.offsetX;
      lastY = e.offsetY;
    });

    canvas.addEventListener('mouseup', () => {
      drawing = false;
    });

    canvas.addEventListener('mousemove', (e) => {
      if (!drawing) return;
      
      ctx.lineWidth = currentTool === 'pen' ? 3 : 20;
      ctx.lineCap = 'round';
      ctx.lineJoin = 'round';
      ctx.strokeStyle = currentTool === 'pen' ? 'red' : 'rgba(0,0,0,1)';
      ctx.globalCompositeOperation = currentTool === 'pen' ? 'source-over' : 'destination-out';

      ctx.beginPath();
      ctx.moveTo(lastX, lastY);
      ctx.lineTo(e.offsetX, e.offsetY);
      ctx.stroke();

      lastX = e.offsetX;
      lastY = e.offsetY;
    });

    window.addEventListener('resize', resizeCanvas);
  </script>
</body>
</html>

